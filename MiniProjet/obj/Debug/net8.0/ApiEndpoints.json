[
  {
    "ContainingType": "MiniProjet.Controllers.ArticleController",
    "Method": "CreateArticleAsync",
    "RelativePath": "api/Article",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MiniProjet.Models.Article",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ArticleController",
    "Method": "GetArticlesAsync",
    "RelativePath": "api/Article",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ArticleController",
    "Method": "GetArticleByIdAsync",
    "RelativePath": "api/Article/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ArticleController",
    "Method": "UpdateArticleAsync",
    "RelativePath": "api/Article/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "MiniProjet.Models.Article",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ArticleController",
    "Method": "DeleteArticleAsync",
    "RelativePath": "api/Article/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.AuthController",
    "Method": "AddRoleAsync",
    "RelativePath": "api/Auth/addrole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MiniProjet.Models.AddRoleModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.AuthController",
    "Method": "RegisterAsync",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MiniProjet.Models.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.AuthController",
    "Method": "GetTokenAsync",
    "RelativePath": "api/Auth/token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MiniProjet.Models.TokenRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.InterventionController",
    "Method": "CreateInterventionAsync",
    "RelativePath": "api/Intervention",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MiniProjet.Models.Intervention",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.InterventionController",
    "Method": "GetInterventionsAsync",
    "RelativePath": "api/Intervention",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.InterventionController",
    "Method": "GetInterventionByIdAsync",
    "RelativePath": "api/Intervention/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.InterventionController",
    "Method": "UpdateInterventionAsync",
    "RelativePath": "api/Intervention/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "MiniProjet.Models.Intervention",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.InterventionController",
    "Method": "DeleteInterventionAsync",
    "RelativePath": "api/Intervention/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ReclamationController",
    "Method": "CreateReclamationAsync",
    "RelativePath": "api/Reclamation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MiniProjet.Models.ReclamationModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ReclamationController",
    "Method": "GetReclamationsAsync",
    "RelativePath": "api/Reclamation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ReclamationController",
    "Method": "GetReclamationByIdAsync",
    "RelativePath": "api/Reclamation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ReclamationController",
    "Method": "UpdateReclamationAsync",
    "RelativePath": "api/Reclamation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "MiniProjet.Models.ReclamationModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.ReclamationController",
    "Method": "DeleteReclamationAsync",
    "RelativePath": "api/Reclamation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MiniProjet.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MiniProjet.WeatherForecast, MiniProjet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]